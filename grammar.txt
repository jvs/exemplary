start = List(Text | VisibleSection | HiddenSection | HtmlComment)

Text = (ExpectNot(Marker) >> /.|\n/)+
    |> `lambda x: ''.join(x)`

Marker = "```" | "~~~" | "<!--"

class VisibleSection {
    is_visible: `True`
    tag: Opt(InlineTag) << /[\s\n]*/
    code: Code
}

class HiddenSection {
    is_visible: `False`
    tag: StartComment >> DanglingTag
    code: Code << /(\s|\n)*-->/
}

HtmlComment = /<!--(.|\n)*?-->/

InlineTag = StartComment >> /.*?(?=\s*-->)/ << /\s*-->/
    |> `lambda x: x.lower() or None`

DanglingTag = (/[^\n]*/ << /(\s|\n)*/)
    |> `lambda x: x.strip().lower() or None`

HiddenBody = /(.|\n)*?(?=\s*-->)/

StartComment = /<!--[ \t]*/

Code = CodeSection("```") | CodeSection("~~~")

class CodeSection(marker) {
    open: marker
    language: /[^\n]*/ |> `lambda x: x.strip().lower() or None` << /\n/
    body: List(ExpectNot(marker) >> /.|\n/) |> `lambda x: ''.join(x)`
    close: marker
}
